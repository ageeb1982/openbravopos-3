spool Oracle-create-user.log

SELECT TO_CHAR(SYSDATE,'DD-MM-YYYY hh24:mi:ss') AS STARTS_SCRIPT FROM DUAL;
SELECT TRIM(0 FROM SYS_CONTEXT('USERENV','INSTANCE_NAME')) AS INSTANCE_NAME, TRIM(0 FROM SYS_CONTEXT('USERENV','CURRENT_USER')) AS CURRENT_USER FROM DUAL;

SET SERVEROUTPUT ON;
SET DEFINE OFF;

DECLARE
  VCREATED NUMERIC(10,0);
  VIDSTEP NUMBER(14,0);
  VDESCRIPTION VARCHAR2(50 CHAR);
BEGIN
  -- ADMIN USER
  SELECT 101 INTO VIDSTEP FROM DUAL;
  SELECT 'PROFILE PROFILE_OB_ADM' INTO VDESCRIPTION FROM DUAL;
  DBMS_OUTPUT.PUT_LINE('EXECUTING STEP ' || VIDSTEP || ' - ' || VDESCRIPTION);
  SELECT NVL(COUNT(*), 0) INTO VCREATED FROM DBA_PROFILES WHERE PROFILE LIKE 'PROFILE_OB_ADM';
  IF (VCREATED = 0) THEN
    EXECUTE IMMEDIATE 'CREATE PROFILE PROFILE_OB_ADM LIMIT IDLE_TIME DEFAULT
      FAILED_LOGIN_ATTEMPTS UNLIMITED
      PASSWORD_LIFE_TIME UNLIMITED
      PASSWORD_REUSE_TIME DEFAULT
      PASSWORD_REUSE_MAX UNLIMITED
      PASSWORD_LOCK_TIME DEFAULT
      PASSWORD_GRACE_TIME DEFAULT
      PASSWORD_VERIFY_FUNCTION DEFAULT';
  ELSE
    DBMS_OUTPUT.PUT_LINE('STEP ' || VIDSTEP || ' NOT EXECUTED - ' || VDESCRIPTION);
  END IF;

  SELECT 102 INTO VIDSTEP FROM DUAL;
  SELECT 'USER OB_ADM' INTO VDESCRIPTION FROM DUAL;
  DBMS_OUTPUT.PUT_LINE('EXECUTING STEP ' || VIDSTEP || ' - ' || VDESCRIPTION);
  SELECT NVL(COUNT(*), 0) INTO VCREATED FROM ALL_USERS WHERE USERNAME LIKE 'OB_ADM';
  IF (VCREATED = 0) THEN
    EXECUTE IMMEDIATE 'CREATE USER OB_ADM
      IDENTIFIED BY OB_ADM
      DEFAULT TABLESPACE OB_DATA
      TEMPORARY TABLESPACE TEMP
      PROFILE PROFILE_OB_ADM
      ACCOUNT UNLOCK';
  ELSE
    DBMS_OUTPUT.PUT_LINE('STEP ' || VIDSTEP || ' NOT EXECUTED - ' || VDESCRIPTION);
  END IF;

  SELECT 103 INTO VIDSTEP FROM DUAL;
  SELECT 'ALTER QUOTA FOR OB_ADM' INTO VDESCRIPTION FROM DUAL;
  DBMS_OUTPUT.PUT_LINE('EXECUTING STEP ' || VIDSTEP || ' - ' || VDESCRIPTION);
  SELECT NVL(COUNT(*), 0) INTO VCREATED FROM ALL_USERS WHERE USERNAME LIKE 'OB_ADM';
  IF (VCREATED > 0) THEN
    EXECUTE IMMEDIATE 'ALTER USER OB_ADM QUOTA UNLIMITED ON OB_DATA';
	EXECUTE IMMEDIATE 'ALTER USER OB_ADM QUOTA UNLIMITED ON OB_INDEX';
  ELSE
    DBMS_OUTPUT.PUT_LINE('STEP ' || VIDSTEP || ' NOT EXECUTED - ' || VDESCRIPTION);
  END IF;

  SELECT 104 INTO VIDSTEP FROM DUAL;
  SELECT 'ROLE ROLE_OB_ADM' INTO VDESCRIPTION FROM DUAL;
  DBMS_OUTPUT.PUT_LINE('EXECUTING STEP ' || VIDSTEP || ' - ' || VDESCRIPTION);
  SELECT NVL(COUNT(*), 0) INTO VCREATED FROM DBA_ROLES WHERE ROLE LIKE 'ROLE_OB_ADM';
  IF (VCREATED = 0) THEN
    EXECUTE IMMEDIATE 'CREATE ROLE ROLE_OB_ADM NOT IDENTIFIED';
    EXECUTE IMMEDIATE 'GRANT ROLE_OB_ADM TO OB_ADM';
    EXECUTE IMMEDIATE 'ALTER USER OB_ADM DEFAULT ROLE ROLE_OB_ADM';
  ELSE
    DBMS_OUTPUT.PUT_LINE('STEP ' || VIDSTEP || ' NOT EXECUTED - ' || VDESCRIPTION);
  END IF;

  SELECT 105 INTO VIDSTEP FROM DUAL;
  SELECT 'GRANTS FOR OB_ADM' INTO VDESCRIPTION FROM DUAL;
  DBMS_OUTPUT.PUT_LINE('EXECUTING STEP ' || VIDSTEP || ' - ' || VDESCRIPTION);
  SELECT NVL(COUNT(*), 0) INTO VCREATED FROM ALL_USERS WHERE USERNAME LIKE 'OB_ADM';
  IF (VCREATED > 0) THEN
    EXECUTE IMMEDIATE 'GRANT CONNECT TO OB_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO OB_ADM';
    EXECUTE IMMEDIATE 'GRANT RESOURCE TO OB_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE ANY SYNONYM TO OB_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE TABLE TO OB_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE PROCEDURE TO OB_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE SEQUENCE TO OB_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE SYNONYM TO OB_ADM';
  ELSE
    DBMS_OUTPUT.PUT_LINE('STEP ' || VIDSTEP || ' NOT EXECUTED - ' || VDESCRIPTION);
  END IF;

  -- PORTAL USER
  SELECT 201 INTO VIDSTEP FROM DUAL;
  SELECT 'PROFILE PROFILE_PO_ADM' INTO VDESCRIPTION FROM DUAL;
  DBMS_OUTPUT.PUT_LINE('EXECUTING STEP ' || VIDSTEP || ' - ' || VDESCRIPTION);
  SELECT NVL(COUNT(*), 0) INTO VCREATED FROM DBA_PROFILES WHERE PROFILE LIKE 'PROFILE_PO_ADM';
  IF (VCREATED = 0) THEN
    EXECUTE IMMEDIATE 'CREATE PROFILE PROFILE_PO_ADM LIMIT IDLE_TIME DEFAULT
      FAILED_LOGIN_ATTEMPTS UNLIMITED
      PASSWORD_LIFE_TIME UNLIMITED
      PASSWORD_REUSE_TIME DEFAULT
      PASSWORD_REUSE_MAX UNLIMITED
      PASSWORD_LOCK_TIME DEFAULT
      PASSWORD_GRACE_TIME DEFAULT
      PASSWORD_VERIFY_FUNCTION DEFAULT';
  ELSE
    DBMS_OUTPUT.PUT_LINE('STEP ' || VIDSTEP || ' NOT EXECUTED - ' || VDESCRIPTION);
  END IF;

  SELECT 202 INTO VIDSTEP FROM DUAL;
  SELECT 'USER PO_ADM' INTO VDESCRIPTION FROM DUAL;
  DBMS_OUTPUT.PUT_LINE('EXECUTING STEP ' || VIDSTEP || ' - ' || VDESCRIPTION);
  SELECT NVL(COUNT(*), 0) INTO VCREATED FROM ALL_USERS WHERE USERNAME LIKE 'PO_ADM';
  IF (VCREATED = 0) THEN
    EXECUTE IMMEDIATE 'CREATE USER PO_ADM
      IDENTIFIED BY PO_ADM
      DEFAULT TABLESPACE PO_DATA
      TEMPORARY TABLESPACE TEMP
      PROFILE PROFILE_PO_ADM
      ACCOUNT UNLOCK';
  ELSE
    DBMS_OUTPUT.PUT_LINE('STEP ' || VIDSTEP || ' NOT EXECUTED - ' || VDESCRIPTION);
  END IF;

  SELECT 203 INTO VIDSTEP FROM DUAL;
  SELECT 'ALTER QUOTA FOR PO_ADM' INTO VDESCRIPTION FROM DUAL;
  DBMS_OUTPUT.PUT_LINE('EXECUTING STEP ' || VIDSTEP || ' - ' || VDESCRIPTION);
  SELECT NVL(COUNT(*), 0) INTO VCREATED FROM ALL_USERS WHERE USERNAME LIKE 'PO_ADM';
  IF (VCREATED > 0) THEN
    EXECUTE IMMEDIATE 'ALTER USER PO_ADM QUOTA UNLIMITED ON PO_DATA';
    EXECUTE IMMEDIATE 'ALTER USER PO_ADM QUOTA UNLIMITED ON PO_INDEX';
    EXECUTE IMMEDIATE 'ALTER USER PO_ADM QUOTA UNLIMITED ON OB_DATA';
    EXECUTE IMMEDIATE 'ALTER USER PO_ADM QUOTA UNLIMITED ON OB_INDEX';
  ELSE
    DBMS_OUTPUT.PUT_LINE('STEP ' || VIDSTEP || ' NOT EXECUTED - ' || VDESCRIPTION);
  END IF;

  SELECT 204 INTO VIDSTEP FROM DUAL;
  SELECT 'ROLE ROLE_PO_ADM' INTO VDESCRIPTION FROM DUAL;
  DBMS_OUTPUT.PUT_LINE('EXECUTING STEP ' || VIDSTEP || ' - ' || VDESCRIPTION);
  SELECT NVL(COUNT(*), 0) INTO VCREATED FROM DBA_ROLES WHERE ROLE LIKE 'ROLE_PO_ADM';
  IF (VCREATED = 0) THEN
    EXECUTE IMMEDIATE 'CREATE ROLE ROLE_PO_ADM NOT IDENTIFIED';
    EXECUTE IMMEDIATE 'GRANT ROLE_PO_ADM TO PO_ADM';
    EXECUTE IMMEDIATE 'ALTER USER PO_ADM DEFAULT ROLE ROLE_PO_ADM';
  ELSE
    DBMS_OUTPUT.PUT_LINE('STEP ' || VIDSTEP || ' NOT EXECUTED - ' || VDESCRIPTION);
  END IF;

  SELECT 205 INTO VIDSTEP FROM DUAL;
  SELECT 'GRANTS FOR PO_ADM' INTO VDESCRIPTION FROM DUAL;
  DBMS_OUTPUT.PUT_LINE('EXECUTING STEP ' || VIDSTEP || ' - ' || VDESCRIPTION);
  SELECT NVL(COUNT(*), 0) INTO VCREATED FROM ALL_USERS WHERE USERNAME LIKE 'PO_ADM';
  IF (VCREATED > 0) THEN
    EXECUTE IMMEDIATE 'GRANT CONNECT TO PO_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO PO_ADM';
    EXECUTE IMMEDIATE 'GRANT RESOURCE TO PO_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE ANY SYNONYM TO PO_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE TABLE TO PO_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE PROCEDURE TO PO_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE SEQUENCE TO PO_ADM';
    EXECUTE IMMEDIATE 'GRANT CREATE SYNONYM TO PO_ADM';
  ELSE
    DBMS_OUTPUT.PUT_LINE('STEP ' || VIDSTEP || ' NOT EXECUTED - ' || VDESCRIPTION);
  END IF;
  
END;
/

SELECT TO_CHAR(SYSDATE,'DD-MM-YYYY hh24:mi:ss') AS ENDS_SCRIPT FROM DUAL;

spool off;
quit
/
