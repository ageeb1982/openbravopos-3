--    Openbravo POS is a point of sales application designed for touch screens.
--    Copyright (C) 2007-2010 Openbravo, S.L.
--    http://sourceforge.net/projects/openbravopos
--
--    This file is part of Openbravo POS.
--
--    Openbravo POS is free software: you can redistribute it and/or modify
--    it under the terms of the GNU General Public License as published by
--    the Free Software Foundation, either version 3 of the License, or
--    (at your option) any later version.
--
--    Openbravo POS is distributed in the hope that it will be useful,
--    but WITHOUT ANY WARRANTY; without even the implied warranty of
--    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--    GNU General Public License for more details.
--
--    You should have received a copy of the GNU General Public License
--    along with Openbravo POS.  If not, see <http://www.gnu.org/licenses/>.

-- Database upgrade script for ORACLE
-- v2.00 - v2.10

SELECT TO_CHAR(SYSDATE,'DD-MM-YYYY hh24:mi:ss') AS STARTS_SCRIPT FROM DUAL;
SELECT TRIM(0 FROM SYS_CONTEXT('USERENV','INSTANCE_NAME')) AS INSTANCE_NAME, TRIM(0 FROM SYS_CONTEXT('USERENV','CURRENT_USER')) AS CURRENT_USER FROM DUAL;

SET SERVEROUTPUT ON;
SET DEFINE OFF;

ALTER TABLE POS_ADM.PEOPLE ADD CARD VARCHAR2(255);  
CREATE INDEX POS_ADM.PEOPLE_CARD_INX ON PEOPLE(CARD) INITRANS 10 TABLESPACE POS_INDEX;

ALTER TABLE POS_ADM.CUSTOMERS ADD TAXID NUMERIC(18,0);  
ALTER TABLE POS_ADM.CUSTOMERS ADD CARD VARCHAR2(255);  
ALTER TABLE POS_ADM.CUSTOMERS ADD MAXDEBT DOUBLE PRECISION DEFAULT 0 NOT NULL;
ALTER TABLE POS_ADM.CUSTOMERS ADD CURDATE TIMESTAMP;
ALTER TABLE POS_ADM.CUSTOMERS ADD CURDEBT DOUBLE PRECISION;
CREATE INDEX POS_ADM.CUSTOMERS_TAXID_INX ON CUSTOMERS(TAXID) INITRANS 10 TABLESPACE POS_INDEX;
CREATE INDEX POS_ADM.CUSTOMERS_CARD_INX ON CUSTOMERS(CARD) INITRANS 10 TABLESPACE POS_INDEX;

ALTER TABLE POS_ADM.PRODUCTS ADD ATTRIBUTES BLOB;

ALTER TABLE POS_ADM.TICKETS ADD CUSTOMER NUMERIC(18,0);
ALTER TABLE POS_ADM.TICKETS ADD CONSTRAINT TICKETS_CUSTOMERS_FK FOREIGN KEY (CUSTOMER) REFERENCES CUSTOMERS(ID);
CREATE INDEX POS_ADM.TICKETS_TICKETID ON TICKETS(TICKETID) INITRANS 10 TABLESPACE POS_INDEX;

ALTER TABLE POS_ADM.TICKETLINES ADD ATTRIBUTES BLOB;

ALTER TABLE POS_ADM.RECEIPTS ADD DATENEW TIMESTAMP;
CREATE INDEX POS_ADM.RECEIPTS_INX_1 ON RECEIPTS(DATENEW) INITRANS 10 TABLESPACE POS_INDEX;
UPDATE POS_ADM.RECEIPTS SET DATENEW = (SELECT DATENEW FROM POS_ADM.TICKETS WHERE TICKETS.ID = RECEIPTS.ID);
ALTER TABLE POS_ADM.RECEIPTS MODIFY DATENEW TIMESTAMP NOT NULL;

DROP INDEX TICKETS_INX_1;
ALTER TABLE POS_ADM.TICKETS DROP COLUMN DATENEW;

INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(14, 'Menu.Root', 0, $FILE{/com/openbravo/pos/templates/Menu.Root.txt});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(15, 'Printer.CustomerPaid', 0, $FILE{/com/openbravo/pos/templates/Printer.CustomerPaid.xml});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(16, 'Printer.CustomerPaid2', 0, $FILE{/com/openbravo/pos/templates/Printer.CustomerPaid2.xml});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(17, 'payment.cash', 0, $FILE{/com/openbravo/pos/templates/payment.cash.txt});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(18, 'banknote.50euro', 1, $FILE{/com/openbravo/pos/templates/banknote.50euro.png});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(19, 'banknote.20euro', 1, $FILE{/com/openbravo/pos/templates/banknote.20euro.png});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(20, 'banknote.10euro', 1, $FILE{/com/openbravo/pos/templates/banknote.10euro.png});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(21, 'banknote.5euro', 1, $FILE{/com/openbravo/pos/templates/banknote.5euro.png});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(22, 'coin.2euro', 1, $FILE{/com/openbravo/pos/templates/coin.2euro.png});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(23, 'coin.1euro', 1, $FILE{/com/openbravo/pos/templates/coin.1euro.png});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(24, 'coin.50cent', 1, $FILE{/com/openbravo/pos/templates/coin.50cent.png});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(25, 'coin.20cent', 1, $FILE{/com/openbravo/pos/templates/coin.20cent.png});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(26, 'coin.10cent', 1, $FILE{/com/openbravo/pos/templates/coin.10cent.png});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(27, 'coin.5cent', 1, $FILE{/com/openbravo/pos/templates/coin.5cent.png});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(28, 'coin.2cent', 1, $FILE{/com/openbravo/pos/templates/coin.2cent.png});
INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(29, 'coin.1cent', 1, $FILE{/com/openbravo/pos/templates/coin.1cent.png});

-- v2.10 - v2.20

CREATE TABLE POS_ADM.TAXCUSTCATEGORIES (
    ID NUMERIC(18,0) NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    PRIMARY KEY (ID)
) INITRANS 10 TABLESPACE POS_DATA;
CREATE UNIQUE INDEX POS_ADM.TAXCUSTCAT_NAME_INX ON TAXCUSTCATEGORIES(NAME) INITRANS 10 TABLESPACE POS_INDEX;

CREATE TABLE POS_ADM.TAXCATEGORIES (
    ID NUMERIC(18,0) NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    PRIMARY KEY (ID)
) INITRANS 10 TABLESPACE POS_DATA;
CREATE UNIQUE INDEX POS_ADM.TAXCAT_NAME_INX ON TAXCATEGORIES(NAME) INITRANS 10 TABLESPACE POS_INDEX;
INSERT INTO POS_ADM.TAXCATEGORIES(ID, NAME) VALUES (0, 'Tax Exempt');
INSERT INTO POS_ADM.TAXCATEGORIES(ID, NAME) VALUES (1, 'Tax Standard');
INSERT INTO POS_ADM.TAXCATEGORIES (ID, NAME) SELECT ID, NAME FROM POS_ADM.TAXES;

ALTER TABLE POS_ADM.TAXES ADD CATEGORY NUMERIC(18,0);
ALTER TABLE POS_ADM.TAXES ADD CUSTCATEGORY NUMERIC(18,0);
ALTER TABLE POS_ADM.TAXES ADD PARENTID NUMERIC(18,0);
ALTER TABLE POS_ADM.TAXES ADD RATECASCADE NUMERIC(1);
ALTER TABLE POS_ADM.TAXES ADD RATEORDER INTEGER;
ALTER TABLE POS_ADM.TAXES ADD CONSTRAINT TAXES_CAT_FK FOREIGN KEY (CATEGORY) REFERENCES TAXCATEGORIES(ID);
ALTER TABLE POS_ADM.TAXES ADD CONSTRAINT TAXES_CUSTCAT_FK FOREIGN KEY (CUSTCATEGORY) REFERENCES TAXCUSTCATEGORIES(ID);
ALTER TABLE POS_ADM.TAXES ADD CONSTRAINT TAXES_TAXES_FK FOREIGN KEY (PARENTID) REFERENCES TAXES(ID);
UPDATE POS_ADM.TAXES SET CATEGORY = ID, RATECASCADE = 0;
ALTER TABLE POS_ADM.TAXES MODIFY CATEGORY NUMERIC(18,0) NOT NULL;
ALTER TABLE POS_ADM.TAXES MODIFY RATECASCADE NUMERIC(1) NOT NULL;

ALTER TABLE POS_ADM.PRODUCTS ADD TAXCAT NUMERIC(18,0);
ALTER TABLE POS_ADM.PRODUCTS ADD CONSTRAINT PRODUCTS_TAXCAT_FK FOREIGN KEY (TAXCAT) REFERENCES TAXCATEGORIES(ID);
UPDATE POS_ADM.PRODUCTS SET TAXCAT = TAX;
ALTER TABLE POS_ADM.PRODUCTS MODIFY TAXCAT NUMERIC(18,0) NOT NULL;
ALTER TABLE POS_ADM.PRODUCTS DROP CONSTRAINT PRODUCTS_FK_2;
ALTER TABLE POS_ADM.PRODUCTS DROP COLUMN TAX;

ALTER TABLE POS_ADM.CUSTOMERS ADD SEARCHKEY NUMERIC(18,0);
UPDATE POS_ADM.CUSTOMERS SET SEARCHKEY = ID;
ALTER TABLE POS_ADM.CUSTOMERS MODIFY SEARCHKEY VARCHAR2(255) NOT NULL;
CREATE UNIQUE INDEX POS_ADM.CUSTOMERS_SKEY_INX ON CUSTOMERS(SEARCHKEY) INITRANS 10 TABLESPACE POS_INDEX;

ALTER TABLE POS_ADM.CUSTOMERS ADD ADDRESS2 VARCHAR2(255);
ALTER TABLE POS_ADM.CUSTOMERS ADD POSTAL VARCHAR2(255);
ALTER TABLE POS_ADM.CUSTOMERS ADD CITY VARCHAR2(255);
ALTER TABLE POS_ADM.CUSTOMERS ADD REGION VARCHAR2(255);
ALTER TABLE POS_ADM.CUSTOMERS ADD COUNTRY VARCHAR2(255);
ALTER TABLE POS_ADM.CUSTOMERS ADD FIRSTNAME VARCHAR2(255);
ALTER TABLE POS_ADM.CUSTOMERS ADD LASTNAME VARCHAR2(255);
ALTER TABLE POS_ADM.CUSTOMERS ADD EMAIL VARCHAR2(255);
ALTER TABLE POS_ADM.CUSTOMERS ADD PHONE VARCHAR2(255);
ALTER TABLE POS_ADM.CUSTOMERS ADD PHONE2 VARCHAR2(255);
ALTER TABLE POS_ADM.CUSTOMERS ADD FAX VARCHAR2(255);
ALTER TABLE POS_ADM.CUSTOMERS ADD TAXCATEGORY NUMERIC(18,0);
ALTER TABLE POS_ADM.CUSTOMERS ADD CONSTRAINT CUSTOMERS_TAXCAT FOREIGN KEY (TAXCATEGORY) REFERENCES TAXCUSTCATEGORIES(ID);

ALTER TABLE POS_ADM.CLOSEDCASH ADD HOSTSEQUENCE INTEGER;  
UPDATE POS_ADM.CLOSEDCASH SET HOSTSEQUENCE = 0;
ALTER TABLE POS_ADM.CLOSEDCASH MODIFY HOSTSEQUENCE INTEGER NOT NULL;
CREATE INDEX POS_ADM.CLOSEDCASH_SEQINX ON CLOSEDCASH(HOST, HOSTSEQUENCE) INITRANS 10 TABLESPACE POS_INDEX;

ALTER TABLE POS_ADM.RECEIPTS ADD ATTRIBUTES BLOB;

ALTER TABLE POS_ADM.TICKETLINES DROP COLUMN NAME;
ALTER TABLE POS_ADM.TICKETLINES DROP COLUMN ISCOM;

CREATE TABLE POS_ADM.TAXLINES (
    ID NUMERIC(18,0) NOT NULL,
    RECEIPT NUMERIC(18,0) NOT NULL,
    TAXID NUMERIC(18,0) NOT NULL, 
    BASE DOUBLE PRECISION NOT NULL, 
    AMOUNT DOUBLE PRECISION NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT TAXLINES_TAX FOREIGN KEY (TAXID) REFERENCES TAXES(ID)
) INITRANS 10 TABLESPACE POS_DATA;

UPDATE POS_ADM.PEOPLE SET CARD = NULL WHERE CARD = '';

-- v2.20 - v2.30beta

INSERT INTO POS_ADM.RESOURCES(ID, NAME, RESTYPE, CONTENT) VALUES(30, 'Printer.PartialCash', 0, $FILE{/com/openbravo/pos/templates/Printer.PartialCash.xml});

CREATE TABLE POS_ADM.TEMP_PRODUCTS_COM (
    ID NUMERIC(18,0) NOT NULL,
    PRODUCT NUMERIC(18,0) NOT NULL,
    PRODUCT2 NUMERIC(18,0) NOT NULL,
    PRIMARY KEY (ID)
) INITRANS 10 TABLESPACE POS_DATA;

INSERT INTO POS_ADM.TEMP_PRODUCTS_COM(ID, PRODUCT, PRODUCT2) SELECT CONCAT(PRODUCT, PRODUCT2), PRODUCT, PRODUCT2 FROM POS_ADM.PRODUCTS_COM;

ALTER TABLE POS_ADM.PRODUCTS_COM DROP CONSTRAINT PRODUCTS_COM_FK_1;
ALTER TABLE POS_ADM.PRODUCTS_COM DROP CONSTRAINT PRODUCTS_COM_FK_2;
DROP TABLE POS_ADM.PRODUCTS_COM;

CREATE TABLE POS_ADM.PRODUCTS_COM (
    ID NUMERIC(18,0) NOT NULL,
    PRODUCT NUMERIC(18,0) NOT NULL,
    PRODUCT2 NUMERIC(18,0) NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT PRODUCTS_COM_FK_1 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS(ID),
    CONSTRAINT PRODUCTS_COM_FK_2 FOREIGN KEY (PRODUCT2) REFERENCES PRODUCTS(ID)
) INITRANS 10 TABLESPACE POS_DATA;
CREATE UNIQUE INDEX POS_ADM.PCOM_INX_PROD ON PRODUCTS_COM(PRODUCT, PRODUCT2) INITRANS 10 TABLESPACE POS_INDEX;

INSERT INTO POS_ADM.PRODUCTS_COM(ID, PRODUCT, PRODUCT2) SELECT ID, PRODUCT, PRODUCT2 FROM POS_ADM.TEMP_PRODUCTS_COM;

DROP TABLE POS_ADM.TEMP_PRODUCTS_COM;

ALTER TABLE POS_ADM.TICKETS ADD TICKETTYPE INTEGER DEFAULT 0 NOT NULL;
DROP INDEX TICKETS_TICKETID;
CREATE INDEX POS_ADM.TICKETS_TICKETID ON TICKETS(TICKETTYPE, TICKETID) INITRANS 10 TABLESPACE POS_INDEX;
UPDATE POS_ADM.TICKETS SET TICKETTYPE = 1 WHERE ID IN (SELECT RECEIPT FROM POS_ADM.PAYMENTS WHERE TOTAL<0);

CREATE SEQUENCE POS_ADM.TICKETSNUM_REFUND START WITH 1;
CREATE SEQUENCE POS_ADM.TICKETSNUM_PAYMENT START WITH 1;

ALTER TABLE POS_ADM.PAYMENTS ADD TRANSID VARCHAR2(255);
ALTER TABLE POS_ADM.PAYMENTS ADD RETURNMSG BLOB;

CREATE TABLE POS_ADM.ATTRIBUTE (
    ID NUMERIC(18,0) NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    PRIMARY KEY (ID)
) INITRANS 10 TABLESPACE POS_DATA;

CREATE TABLE POS_ADM.ATTRIBUTEVALUE (
    ID NUMERIC(18,0) NOT NULL,
    ATTRIBUTE_ID NUMERIC(18,0) NOT NULL,
    VALUE VARCHAR2(255),
    PRIMARY KEY (ID),
    CONSTRAINT ATTVAL_ATT FOREIGN KEY (ATTRIBUTE_ID) REFERENCES ATTRIBUTE(ID)
) INITRANS 10 TABLESPACE POS_DATA;

CREATE TABLE POS_ADM.ATTRIBUTESET (
    ID NUMERIC(18,0) NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    PRIMARY KEY (ID)
) INITRANS 10 TABLESPACE POS_DATA;

CREATE TABLE POS_ADM.ATTRIBUTEUSE (
    ID NUMERIC(18,0) NOT NULL,
    ATTRIBUTESET_ID NUMERIC(18,0) NOT NULL,
    ATTRIBUTE_ID NUMERIC(18,0) NOT NULL,
    LINENO INTEGER,
    PRIMARY KEY (ID),
    CONSTRAINT ATTUSE_SET FOREIGN KEY (ATTRIBUTESET_ID) REFERENCES ATTRIBUTESET(ID),
    CONSTRAINT ATTUSE_ATT FOREIGN KEY (ATTRIBUTE_ID) REFERENCES ATTRIBUTE(ID)
) INITRANS 10 TABLESPACE POS_DATA;
CREATE UNIQUE INDEX POS_ADM.ATTUSE_LINE ON ATTRIBUTEUSE(ATTRIBUTESET_ID, LINENO) INITRANS 10 TABLESPACE POS_INDEX;

CREATE TABLE POS_ADM.ATTRIBUTESETINSTANCE (
    ID NUMERIC(18,0) NOT NULL,
    ATTRIBUTESET_ID NUMERIC(18,0) NOT NULL,
    DESCRIPTION VARCHAR2(255),
    PRIMARY KEY (ID),
    CONSTRAINT ATTSETINST_SET FOREIGN KEY (ATTRIBUTESET_ID) REFERENCES ATTRIBUTESET(ID)
) INITRANS 10 TABLESPACE POS_DATA;

CREATE TABLE POS_ADM.ATTRIBUTEINSTANCE (
    ID NUMERIC(18,0) NOT NULL,
    ATTRIBUTESETINSTANCE_ID NUMERIC(18,0) NOT NULL,
    ATTRIBUTE_ID NUMERIC(18,0) NOT NULL,
    VALUE VARCHAR2(255),
    PRIMARY KEY (ID),
    CONSTRAINT ATTINST_SET FOREIGN KEY (ATTRIBUTESETINSTANCE_ID) REFERENCES ATTRIBUTESETINSTANCE(ID),
    CONSTRAINT ATTINST_ATT FOREIGN KEY (ATTRIBUTE_ID) REFERENCES ATTRIBUTE(ID)
) INITRANS 10 TABLESPACE POS_DATA;

ALTER TABLE POS_ADM.PRODUCTS ADD ATTRIBUTESET_ID NUMERIC(18,0);
ALTER TABLE POS_ADM.PRODUCTS ADD CONSTRAINT PRODUCTS_ATTRSET_FK FOREIGN KEY (ATTRIBUTESET_ID) REFERENCES ATTRIBUTESET(ID);

ALTER TABLE POS_ADM.STOCKDIARY ADD ATTRIBUTESETINSTANCE_ID NUMERIC(18,0);
ALTER TABLE POS_ADM.STOCKDIARY ADD CONSTRAINT STOCKDIARY_ATTSETINST FOREIGN KEY (ATTRIBUTESETINSTANCE_ID) REFERENCES ATTRIBUTESETINSTANCE(ID);

CREATE TABLE POS_ADM.STOCKLEVEL (
    ID NUMERIC(18,0) NOT NULL,
    LOCATION NUMERIC(18,0) NOT NULL,
    PRODUCT NUMERIC(18,0) NOT NULL,
    STOCKSECURITY DOUBLE PRECISION,
    STOCKMAXIMUM DOUBLE PRECISION,
    PRIMARY KEY (ID),
    CONSTRAINT STOCKLEVEL_PRODUCT FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS(ID),
    CONSTRAINT STOCKLEVEL_LOCATION FOREIGN KEY (LOCATION) REFERENCES LOCATIONS(ID)
) INITRANS 10 TABLESPACE POS_DATA;

INSERT INTO POS_ADM.STOCKLEVEL(ID, LOCATION, PRODUCT, STOCKSECURITY, STOCKMAXIMUM) SELECT CONCAT(LOCATION, PRODUCT), LOCATION, PRODUCT, STOCKSECURITY, STOCKMAXIMUM FROM POS_ADM.STOCKCURRENT;

CREATE TABLE POS_ADM.TEMP_STOCKCURRENT (
    LOCATION NUMERIC(18,0) NOT NULL,
    PRODUCT NUMERIC(18,0) NOT NULL,
    ATTRIBUTESETINSTANCE_ID NUMERIC(18,0),
    UNITS DOUBLE PRECISION NOT NULL
);

INSERT INTO POS_ADM.TEMP_STOCKCURRENT(LOCATION, PRODUCT, UNITS) SELECT LOCATION, PRODUCT, UNITS FROM POS_ADM.STOCKCURRENT;

ALTER TABLE POS_ADM.STOCKCURRENT DROP CONSTRAINT STOCKCURRENT_FK_1;
ALTER TABLE POS_ADM.STOCKCURRENT DROP CONSTRAINT STOCKCURRENT_FK_2;
DROP TABLE POS_ADM.STOCKCURRENT;

CREATE TABLE POS_ADM.STOCKCURRENT (
    LOCATION NUMERIC(18,0) NOT NULL,
    PRODUCT NUMERIC(18,0) NOT NULL,
    ATTRIBUTESETINSTANCE_ID NUMERIC(18,0),
    UNITS DOUBLE PRECISION NOT NULL,
    CONSTRAINT STOCKCURRENT_FK_1 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS(ID),
    CONSTRAINT STOCKCURRENT_ATTSETINST FOREIGN KEY (ATTRIBUTESETINSTANCE_ID) REFERENCES ATTRIBUTESETINSTANCE(ID),
    CONSTRAINT STOCKCURRENT_FK_2 FOREIGN KEY (LOCATION) REFERENCES LOCATIONS(ID)
) INITRANS 10 TABLESPACE POS_DATA;
CREATE UNIQUE INDEX POS_ADM.STOCKCURRENT_INX ON STOCKCURRENT(LOCATION, PRODUCT, ATTRIBUTESETINSTANCE_ID) INITRANS 10 TABLESPACE POS_INDEX;

INSERT INTO POS_ADM.STOCKCURRENT(LOCATION, PRODUCT, UNITS) SELECT LOCATION, PRODUCT, UNITS FROM POS_ADM.TEMP_STOCKCURRENT;

DROP TABLE POS_ADM.TEMP_STOCKCURRENT;

ALTER TABLE POS_ADM.TICKETLINES ADD ATTRIBUTESETINSTANCE_ID NUMERIC(18,0);
ALTER TABLE POS_ADM.TICKETLINES ADD CONSTRAINT TICKETLINES_ATTSETINST FOREIGN KEY (ATTRIBUTESETINSTANCE_ID) REFERENCES ATTRIBUTESETINSTANCE(ID);

-- v2.30beta - v2.30

ALTER TABLE POS_ADM.ATTRIBUTEVALUE DROP CONSTRAINT ATTVAL_ATT;
ALTER TABLE POS_ADM.ATTRIBUTEVALUE ADD CONSTRAINT ATTVAL_ATT FOREIGN KEY (ATTRIBUTE_ID) REFERENCES ATTRIBUTE(ID) ON DELETE CASCADE;

ALTER TABLE POS_ADM.ATTRIBUTEUSE DROP CONSTRAINT ATTUSE_SET;
ALTER TABLE POS_ADM.ATTRIBUTEUSE ADD CONSTRAINT ATTUSE_SET FOREIGN KEY (ATTRIBUTESET_ID) REFERENCES ATTRIBUTESET(ID) ON DELETE CASCADE;

ALTER TABLE POS_ADM.ATTRIBUTESETINSTANCE DROP CONSTRAINT ATTSETINST_SET;
ALTER TABLE POS_ADM.ATTRIBUTESETINSTANCE ADD CONSTRAINT ATTSETINST_SET FOREIGN KEY (ATTRIBUTESET_ID) REFERENCES ATTRIBUTESET(ID) ON DELETE CASCADE;

ALTER TABLE POS_ADM.ATTRIBUTEINSTANCE DROP CONSTRAINT ATTINST_SET;
ALTER TABLE POS_ADM.ATTRIBUTEINSTANCE ADD CONSTRAINT ATTINST_SET FOREIGN KEY (ATTRIBUTESETINSTANCE_ID) REFERENCES ATTRIBUTESETINSTANCE(ID) ON DELETE CASCADE;

ALTER TABLE POS_ADM.PRODUCTS MODIFY ISCOM NUMERIC(1) DEFAULT 0;
ALTER TABLE POS_ADM.PRODUCTS MODIFY ISSCALE NUMERIC(1) DEFAULT 0;
ALTER TABLE POS_ADM.TAXES MODIFY RATECASCADE NUMERIC(1) DEFAULT 0;
ALTER TABLE POS_ADM.CUSTOMERS MODIFY VISIBLE NUMERIC(1) DEFAULT 1;

-- v2.30 - v2.30.1

ALTER TABLE POS_ADM.TAXES ADD VALIDFROM TIMESTAMP DEFAULT TO_DATE('2001-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') NOT NULL;

-- v2.30.1 - v2.30.2

-- final script

DELETE FROM POS_ADM.SHAREDTICKETS;

UPDATE POS_ADM.APPLICATIONS SET NAME = $APP_NAME{}, VERSION = $APP_VERSION{} WHERE ID = $APP_ID{};

COMMIT;

SELECT TO_CHAR(SYSDATE,'DD-MM-YYYY hh24:mi:ss') AS ENDS_SCRIPT FROM DUAL;
